# -*- coding: utf-8 -*-
"""Student Data Tracker CLI Tool.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/113SMQ5WjWBchS6JjDucnXy1cTnxmkjhv
"""

"""
Student Data Tracker CLI Tool
-----------------------------

This command-line Python application helps manage student records. It supports:
- Adding student details (name, roll number, marks in 3 subjects)
- Displaying all student records
- Calculating average marks
- Saving records to a CSV file

Author: Your Name
"""

import csv

def input_student_data():
    """
    Prompts the user to enter details for a single student.
    Returns a dictionary with the student's name, roll number, and a list of marks.
    """
    try:
        student = {}
        student['name'] = input("Enter student name: ").strip()
        student['roll_number'] = input("Enter roll number: ").strip()

        student['marks'] = []
        for i in range(1, 4):
            while True:
                try:
                    mark = float(input(f"Enter marks for Subject {i}: "))
                    if 0 <= mark <= 100:
                        student['marks'].append(mark)
                        break
                    else:
                        print("Marks must be between 0 and 100.")
                except ValueError:
                    print("Invalid input. Please enter a numeric value.")
        return student
    except Exception as e:
        print(f"An error occurred: {e}")
        return None


def display_students(students):
    """
    Displays all student records in a readable format,
    including the average marks for each student.
    """
    if not students:
        print("No student records available.")
        return
    print("\n--- All Student Records ---")
    for idx, student in enumerate(students, start=1):
        avg = sum(student['marks']) / len(student['marks'])
        print(f"\nStudent {idx}:")
        print(f"Name: {student['name']}")
        print(f"Roll Number: {student['roll_number']}")
        print(f"Marks: {student['marks']}")
        print(f"Average Marks: {avg:.2f}")


def save_to_csv(students, filename="student_records.csv"):
    """
    Saves all student records to a CSV file.
    """
    try:
        with open(filename, mode='w', newline='') as file:
            writer = csv.writer(file)
            writer.writerow(["Name", "Roll Number", "Subject 1", "Subject 2", "Subject 3", "Average"])
            for student in students:
                avg = sum(student['marks']) / len(student['marks'])
                writer.writerow([student['name'], student['roll_number'], *student['marks'], f"{avg:.2f}"])
        print(f"Records saved to '{filename}' successfully.")
    except Exception as e:
        print(f"Failed to save file: {e}")


def show_menu():
    """
    Displays the CLI menu options.
    """
    print("\nChoose an option:")
    print("1. Add Student")
    print("2. Display All Records")
    print("3. Save Records to CSV")
    print("4. Exit")


def main():
    """
    The main function that runs the menu-driven CLI application.
    """
    students = []
    print("ðŸ“˜ Welcome to the Student Data Tracker CLI Tool!")

    while True:
        show_menu()
        choice = input("Enter your choice (1-4): ").strip()

        if choice == '1':
            student = input_student_data()
            if student:
                students.append(student)
        elif choice == '2':
            display_students(students)
        elif choice == '3':
            save_to_csv(students)
        elif choice == '4':
            print("Exiting... Goodbye!")
            break
        else:
            print("Invalid choice. Please select between 1 and 4.")


if __name__ == "__main__":
    main()

